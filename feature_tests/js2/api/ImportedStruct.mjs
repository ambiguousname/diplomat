// generated by diplomat-tool
import wasm from "./diplomat-wasm.mjs"
import * as diplomatRuntime from "./diplomat-runtime.mjs"


export class ImportedStruct {
    #ptr
    foo;
    count;
    // Return this struct as any array that can be expanded with spread syntax (...)
    #intoFFI() {
        [
            /*TODO: Other struct fields. foo.ffiValue*/, 
            /*TODO: Other struct fields. count*/]
    }
    

    // This struct contains borrowed fields, so this takes in a list of
    // "edges" corresponding to where each lifetime's data may have been borrowed from
    // and passes it down to individual fields containing the borrow.
    // This method does not attempt to handle any dependencies between lifetimes, the caller
    // should handle this when constructing edge arrays.
    constructor(ptr) {
        this.#ptr = ptr;
        foo = UnimportedEnum[Array.from(UnimportedEnum.values.keys())[foo]],
        count = count;
    }
    

}